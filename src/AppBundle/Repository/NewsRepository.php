<?php

namespace AppBundle\Repository;

use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * NewsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NewsRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param $search
     * @param $page
     * @param $count
     * @param $order_by
     * @param $sort
     * @param $filters
     * @return Paginator
     */
    public function filter($search, $page, $count, $order_by, $sort, $filters)
    {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb
            ->select('n')
            ->from('AppBundle:News', 'n')
        ;

        if(!empty($search)) {

            $search = explode(' ', $search);
            foreach ($search as $q) {
                $qb->andWhere($qb->expr()->like('CONCAT(' . implode(", ' ', ", [
                        'n.title',
                        'n.summary',
                        'n.news'
                    ]) . ')', $qb->expr()->literal('%' . $q . '%')));
            }
        }

        if(isset($filters['enabled'])) {
            $qb
                ->andWhere('n.enabled = :enabled')
                ->setParameter('enabled', $filters['enabled'])
            ;
        }

        if(!empty($order_by)) {
            $qb->orderBy("n.{$order_by}", $sort);
        }

        $qb
            ->setFirstResult($page * $count)
            ->setMaxResults($count)
        ;

        return new Paginator($qb->getQuery());
    }

    /**
     * @param $ids
     */
    public function bulkDelete($ids)
    {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb
            ->delete('AppBundle:News', 'n')
            ->where($qb->expr()->in('n.id', $ids))
            ->getQuery()
            ->execute()
        ;
    }
}
